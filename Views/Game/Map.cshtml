@model int
@{
    ViewData["Title"] = "Map";
}
<head>
</head>
<script type = "text/javascript" >

    function RedrawMapTable(first_XPos, first_YPos) {
        $.ajax({
            type: 'GET',
            url: '@Html.Raw(@Url.Action("GetMapTable", "Game"))',
            data: {
                XPos: first_XPos,
                YPos: first_YPos
            },
            contentType: 'json',

            success: function(result) {
                $("#mapTableLoading").hide();
                $("#myTable").html(result);
            },

            error: function() {
                alert("wtf");
            }
        });
    }

function RedrawMapTableForEditing(first_XPos, first_YPos) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetMapTable", "Game"))',
        data: {
            XPos: first_XPos,
            YPos: first_YPos
        },
        contentType: 'json',

        success: function(result) {
            $("#mapTableLoading").hide();
            $("#myTable").html(result);
            for (let i = first_XPos; i < first_XPos + 11; i++)
                for (let j = first_YPos; j < first_YPos + 11; j++) {
                    document.getElementById(i + ' ' + j).addEventListener('click', function cellEditOnclick() {
                        ChangeCellType(i, j);
                        RedrawMapTableForEditing(first_XPos, first_YPos);
                    });
                }
        },

        error: function() {
            alert("wtf");
        }
    });
}

function ChangeCellType(XPos, YPos) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("ClickMapCellOnMapRedactor", "Game"))',
        data: {
            xpos: XPos,
            ypos: YPos
        },
        contentType: 'json',

        success: function(result) {
            $("#mapTableLoading").hide();
            RedrawMapTableForEditing(0, 0);
        },

        error: function() {
            alert("wtf");
        }
    });
}

function GetZoneInfo(first_XPos, first_YPos) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetZoneInfo", "Game"))',
        data: {
            XPos: first_XPos,
            YPos: first_YPos,
            id: @Model
        },
        contentType: 'json',

        success: function(result) {
            $("#zoneInfo").html(result);
        },

        error: function() {
            alert("wtf");
        }
    });
}

function buttonFullClick(isFull, availibleStats) {
    if (isFull && availibleStats) {
        GetCharacterInfo(true, true);
    } else if (isFull) {
        GetCharacterInfo(true);
        GetDmgAndArmor(false);
    } else {
        GetCharacterInfo(false);
    }
    GetInventory();
}

function GetCharacterInfo(isFull, availibleStats) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetCharacterInfo", "Game"))',
        data: {
            id: @Model,
            full: isFull
        },
        contentType: 'json',
        success: function(result) {
            $("#playerInfoCard").html(result);
            if (isFull) {
                $("#inventory").hide();
                $("#itemInfo").hide();
                GetDmgAndArmor(availibleStats);
            } else {

                $("#inventory").show();
                $("#itemInfo").show();
            }
        },

        error: function() {
            alert("GetCharacterInfoError");
        }
    });
}

function SpendStatPoint(statId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("SpendStatPoint", "Game"))',
        data: {
            id: @Model,
            stat_id: statId
        },
        contentType: 'json',
        success: function(result) {
            GetCharacterInfo(false);
        },
        error: function() {
            alert("SpendStatPointError");
        }
    });
}


function GetInventory() {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetInventory", "Game"))',
        data: {
            id: @Model
        },
        contentType: 'json',
        success: function(result) {
            $("#inventory").html(result);
        },

        error: function() {
            alert("wtf");
        }
    });
}

function GetItemInfo(exItemId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetItemInfo", "Game"))',
        data: {
            id: @Model,
            itemId: exItemId
        },
        contentType: 'json',
        success: function(result) {
            $("#itemInfo").html(result);
        },

        error: function() {
            alert("Nothing equipped in this slot");
        }
    });
}


function SetBattleInterface(monsterId) {
    $("#zoneInfo").hide();
    $("#myTable").hide();
    $("#btnCentrate").hide();
    GetMonsterInfo(monsterId);
    GetCharacterInfo(true);
    $("#monsterInfoCard").show();
}

function SetMapInterface() {
    $("#monsterInfoCard").hide();
    $("#battle").hide();
    $("#myTable").show();
    $("#btnCentrate").show();
    GetCharacterInfo(false);
    $("#inventory").show();
    $("#itemInfo").show();
    $("#zoneInfo").show();
    GetPlayerPosition();
}

function GetPlayerPosition() {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetPlayerPosition", "Game"))',
        data: {
            id: @Model
        },
        contentType: 'json',
        success: function(result) {
            var x = result[0];
            var y = result[1];
            GetZoneInfo(x, y);
            RedrawMapTable(x - 5, y - 5);
            alert("Welcome back to the map!");
            InitPlayer();
            GetCharacterInfo(false);
            GetInventory();
        },
        error: function() {
            alert("wtf");
        }
    });

}

function ChangePlayerPosition(x, y) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("ChangePlayerPosition", "Game"))',
        data: {
            xpos: x,
            ypos: y,
            id: @Model
        },
        contentType: 'json',
        success: function(result) {
            if (result == false)
                alert('Something went wrong');
        },
        error: function() {
            alert("error");
        }
    });
}

function InitPlayer() {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetPlayerPosition", "Game"))',
        data: {
            id: @Model
        },
        contentType: 'json',
        success: function(result) {
            var x = result[0];
            var y = result[1];
            movePlayer(x, y);
            $("#monsterInfoCard").hide();
            return result;
        },
        error: function() {
            alert("wtf");
        }
    });
}

function movePlayer(XPos, YPos) {
    $.each(document.getElementsByClassName("map-cell"), function(index, value) {

        $(value).css('background-color', 'transparent');
        $(value).replaceWith($(value).clone());
    });
    var buffer = document.getElementById(XPos + ' ' + YPos).innerHTML;
    document.getElementById(XPos + ' ' + YPos).innerHTML = '<img class="text-center" src="/images/Player.jpg" style="height:80px; width:80px; margin:0px; padding:0px; display:block;" />'
    //IT works
    for (let i = XPos - 1; i < XPos + 2; i++)
        for (let j = YPos - 1; j < YPos + 2; j++)
            if (!(i == XPos && j == YPos)) {
                if (document.getElementById(i + ' ' + j) != null && document.getElementById(i + ' ' + j).innerHTML.indexOf('Mountain') == -1) {
                    $(document.getElementById(i + ' ' + j)).css('background-color', 'green');
                    document.getElementById(i + ' ' + j).addEventListener('click', function cellOnclick() {
                        ChangePlayerPosition(i, j);
                        movePlayer(i, j);
                        GetZoneInfo(i, j);
                        GetCharacterInfo(false);
                        document.getElementById(XPos + ' ' + YPos).innerHTML = buffer;
                        GetInventory();
                    });
                }

            }
}

function StartBattle(monsterId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("StartBattle", "Game"))',
        data: {
            id: @Model,
            monster_id: monsterId
        },
        contentType: 'json',
        success: function(result) {
            $("#battle").html(result);
            SetBattleInterface(monsterId);
            GetCharacterInfo(true);
            GetDmgAndArmor(false);
        },
        error: function() {
            alert("StartBattleError");
        }
    });
}


function WinBattle(monsterId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("WinBattle", "Game"))',
        data: {
            id: @Model,
            monster_id: monsterId
        },
        contentType: 'json',
        success: function(result) {
            $("#playerInfoCard").html(result);
            SetMapInterface();
            alert("You won! But he died in agony :c");
        },

        error: function() {
            alert("BattleError");
        }
    });
}

function CheckMonsterIfDead(monsterId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("isMonsterDead", "Game"))',
        data: {
            id: @Model,
            monster_id: monsterId
        },
        contentType: 'json',
        success: function(result) {
            if (result)
                WinBattle(monsterId);
        },

        error: function() {
            alert("BattleError");
        }
    });
}

function GetMonsterInfo(monsterId) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetMonsterInfo", "Game"))',
        data: {
            existing_monster_id: monsterId
        },
        contentType: 'json',
        success: function(result) {
            $("#monsterInfoCard").html(result);
        },
        error: function() {
            alert("wtf");
        }
    });
}

function GetDmgAndArmor(availibleStats) {
    r = Array(7);
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetCalculatedDmgAndArmor", "Game"))',
        data: {
            id: @Model
        },
        contentType: 'json',
        success: function(result) {
            r = result;
            document.getElementById("damage").innerHTML = '<b>Damage: </b> ' + r[0];
            document.getElementById("armor").innerHTML = '<b>Armor: </b>' + r[1];
            if (availibleStats) {
                document.getElementById("str").innerHTML = '<b>STR: </b>' + r[2] + '<b onclick="SpendStatPoint(1);"> (+) </b>';
                document.getElementById("dex").innerHTML = '<b>DEX: </b>' + r[3] + '<b onclick="SpendStatPoint(2);"> (+) </b>';
                document.getElementById("int").innerHTML = '<b>INT: </b>' + r[4] + '<b onclick="SpendStatPoint(3);"> (+) </b>';
                document.getElementById("con").innerHTML = '<b>CON: </b>' + r[5] + '<b onclick="SpendStatPoint(4);"> (+) </b>';
                document.getElementById("cha").innerHTML = '<b>CHA: </b>' + r[6] + '<b onclick="SpendStatPoint(5);"> (+) </b>';
            } else {
                document.getElementById("str").innerHTML = '<b>STR: </b>' + r[2];
                document.getElementById("dex").innerHTML = '<b>DEX: </b>' + r[3];
                document.getElementById("int").innerHTML = '<b>INT: </b>' + r[4];
                document.getElementById("con").innerHTML = '<b>CON: </b>' + r[5];
                document.getElementById("cha").innerHTML = '<b>CHA: </b>' + r[6];
            }
        },
        error: function() {
            alert("wtf");
        }
    });
    return r;
}

function EnterTown(xpos, ypos) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("EnterTown", "Game"))',
        data: {
            id: @Model,
            XPos: xpos,
            YPos: ypos
        },
        contentType: 'json',
        success: function(result) {
            $("#myTable").html(result);
            $("#btnCentrate").hide();
            GetTownEvents(xpos, ypos);
        },
        error: function() {
            alert("wEnterTownError");
        }
    });
}

function EnterTavern(xpos, ypos) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("EnterTavern", "Game"))',
        data: {
            id: @Model,
            XPos: xpos,
            YPos: ypos
        },
        contentType: 'json',
        success: function(result) {
            $("#myTable").html(result);
            $("#btnCentrate").hide();
            GetTownEvents(xpos, ypos, 2);
        },
        error: function() {
            alert("wEnterTownError");
        }
    });
}

function GetTownEvents(xpos, ypos, eventType) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("GetTownEvents", "Game"))',
        data: {
            id: @Model,
            XPos: xpos,
            YPos: ypos,
            type: eventType
        },
        contentType: 'json',
        success: function(result) {
            $("#zoneInfo").html(result);
        },
        error: function() {
            alert("GetTownEventsError");
        }
    });
}

function Turn(monster_id) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("Turn", "Game"))',
        data: {
            id: @Model,
            existingMontersId: monster_id
        },
        contentType: 'json',
        success: function(result) {
            GetMonsterInfo(monster_id);
            GetCharacterInfo(true);
            GetDmgAndArmor(false);
            CheckMonsterIfDead(monster_id);
            $.each(result, function(index, value) {
                var currentTime = new Date();
                document.getElementById("logCardBody").innerHTML += '<p>' + [currentTime.getHours(), currentTime.getMinutes(), currentTime.getSeconds()].join(':') + ': ' + value + '</p>';

            });
        },
        error: function() {
            alert("DealDamageError");
        }
    });
}

function Equip(exItemId, loottype) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("Equip", "Game"))',
        data: {
            id: @Model,
            existingItemId: exItemId,
            type: loottype
        },
        contentType: 'json',
        success: function() {
            refreshStatsInterface(false);
        },
        error: function() {
            alert("wtf");
        }
    });
}

function UnEquip(loottype) {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("UnEquip", "Game"))',
        data: {
            id: @Model,
            type: loottype
        },
        contentType: 'json',
        success: function() {
            refreshStatsInterface(false);
        },
        error: function() {
            alert("wtf");
        }
    });
}

function WakeUpInTavern() {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("EnterTavern", "Game"))',
        contentType: 'json',
        success: function(result) {
            $("#myTable").html(result);
            $("#right").show();
        },
        error: function() {
            alert("wEnterTownError");
        }
    });
}

function RefillMapWithMonster() {
    $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("RefillMapWithMonsters", "Game"))',
        contentType: 'json',
        success: function(result) {
            WakeUpInTavern();
            alert("New day becomes and new monsters are waiting for you.");
        },
        error: function() {
            alert("RefillMapWithMonsterError");
        }
    });

}

    function SleepNight(payment)
    {
        if (confirm('Are you sure to pay ' + payment + ' gold to skip night?') && SpendMoney(payment))
        {
        $.ajax({
            type: 'GET',
            url: '@Html.Raw(@Url.Action("SleepNight", "Game"))',
            contentType: 'json',
            success: function (result)
            {
                $("#right").hide();
                $("#myTable").html(result);
                RefillMapWithMonster();
            },
            error: function() {
                alert("Not enought money. Come back when you earn more.");
            }
        });
    } else
    {
        alert("Not enought money. Come back when you earn more.");
    }
}

    function SpendMoney(payment)
    {
        return $.ajax({
        type: 'GET',
        url: '@Html.Raw(@Url.Action("SpendMoney", "Game"))',
        async: false,
        data: {
            id: @Model,
            amount: payment
        },
        contentType: 'json'
        }).responseJSON;
}

function refreshStatsInterface(full) {
    GetCharacterInfo(full);
    GetInventory();
    } 
    </script> >
<body onload="GetPlayerPosition();">
    @*<body onload="RedrawMapTableForEditing(0,0);">*@
    <div id="left" class="container">
        <div id="playerInfoCard" class="card">
            <div class="card-body">
            </div>
        </div>

        <div class="btn-group dropright" id="inventory">

        </div>
        <div id="itemInfo" class="card">
            <div class="card-body">
            </div>
        </div>
    </div>
    <div id="main" class="container">
        <div id="battle" class="container">

        </div>
        <table id="myTable"></table>


        <button id="btnCentrate" type="button" class="btn btn-light" onclick="GetPlayerPosition();">
            Centrate map
        </button>
        <div class="spinner-border text-dark" role="status" id="mapTableLoading">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div id="right" class="container">
        <div id="zoneInfo" class="card">
            <div class="card-body">
            </div>
        </div>
        <div id="monsterInfoCard" class="card">
            <div class="card-body">
            </div>
        </div>

    </div>
    <style>

        #left {
            position: fixed;
            top: 70px;
            left: 5px;
            width: 350px;
        }

        #right {
            position: fixed;
            top: 70px;
            right: 5px;
            width: 400px;
        }
    </style>
</body>